#server.port=7879
#server.servlet.context-path=/myfeed/
#
#spring.shardingsphere.datasource.names=ds0,ds1
#
#spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds0.url=jdbc:mysql://www.xdblog.site:3308/feed_demo0?serverTimezone=GMT%2B8
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=1234567
#
#spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.ds1.url=jdbc:mysql://www.xdblog.site:3308/feed_demo1?serverTimezone=GMT%2B8
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=1234567
#
#
## 标准分片表配置
## 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
#spring.shardingsphere.rules.sharding.tables.feed_info.actual-data-nodes=ds$->{0..1}.feed_info_$->{0..1}
#
## 用于单分片键的标准分片场景
#spring.shardingsphere.rules.sharding.tables.feed_info.database-strategy.standard.sharding-column=id
#spring.shardingsphere.rules.sharding.tables.feed_info.database-strategy.standard.sharding-algorithm-name=feedinfo-database-inline
#
## 分表策略，同分库策略
#spring.shardingsphere.rules.sharding.tables.<table-name>.table-strategy.standard.sharding-column=user_id
#spring.shardingsphere.rules.sharding.tables.<table-name>.table-strategy.standard.sharding-algorithm-name=feedinfo-table-inline
#
#
#spring.shardingsphere.rules.sharding.sharding-algorithms.feedinfo-database-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.feedinfo-database-inline.props.algorithm.name=ds$->{id % 2}